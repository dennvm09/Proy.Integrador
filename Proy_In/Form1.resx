<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A////AHx8gABcXGEANTU7ADY2PAAAAAAAVFRXAEA/RACDgoYAgH+DAFBP
        VABhYGUAAAAAAISGiQCOj5M3aGpuPHl7fgBgYGUTR0dNFywrMgIsLDIV19XVAEZGSiYyMjgSa2tvA1xc
        YUk8O0EeTk5TAAAAAADm6ekA5unpabK0tqH///8A0dHSSZubnnK1s7QWk5KUmk5NUhacmpmVb25wa8LA
        whzEwsPelpWYnQAAAAUAAAAA8fT0APT491fS1NXbT1BWHPn5+U7Dw8S5rayuLr27vM10c3ZQuba0nZOS
        ksGysbJJ3dvbj8jHybd6eX07AAAAAPH08wD09/cz5ujo7JeYm1j8+/tE19fX5KGgola9u7ychIOGe6im
        pYicm5rUm5qbiK+trkDg3+BbqqmsdwAAAADy9PQA8/b2FePl5dW4ubuj3dzdP9jX2NqrqauMvLq7fJGP
        kXKYlpaOn56em5ybncKWlZdW9fX1IsHBw4pNT1QARUVLAP///wXW2Nmfy8zO0Ly8vlzV1NSptLO0urGw
        sXydm5xBkpCQqJeWlnWysbKonJqdivLy8w3Q0NGAUlNYJiAgJxwAAAAG0tTVhNrb3L+4uLqr0tHSg8TC
        xMavra+WpaOjE5yamsCWlJSJ0tDQSq+ur7p0dHgZ29vbcqSoqlWXmp28jI6Rts/R0sro6el54eHh9MzM
        zXvZ19eXwb/Ao////wC4tbOGo6KhosG/wQrFxMWtkZCTm9jY2Yj///8B7PDwPOfr67Tw8vK19fb2Jfn5
        +Mvh4OFy1tXVTsnIyIz8+vYAuLa0OLCurX7///8A4uDgRd7d3uHu7u525+zsAOnt7QD09/cJ9Pb2E+Lh
        4QD39vZN8/LyN9HPzg3V1Ncmvq1bAP/1/wPT07APgn2zAOro6QLz8/Io+Pf3EOzv7wDy9fQA8PPyAPP1
        9QD7+/oA+vr7ADdOeQCxl2AAmm0RFoRyID4zVkIvIhmiRyQdjQZva6gA7u3uAPT08wAAAAAAAAAAAAAA
        AAAAAAAA9/XzAPf28wD29PIA1p0eANycHjeumx24SIFFsigd2MUnHMgiJxzFAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAN2iHQDnoh0iuqUcmFCRQbYqIN/UKBviNCgc4QAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADboBwA8p8bAqunGRRPkj41KR7jgygb5iIoG+YAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3KEcAOygHACxpRsAU5wxACcY5wknGuQCJxnkAAAA
        AAAAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AMAAP4D
        AAD+AwAA/gMAAA==
</value>
  </data>
</root>